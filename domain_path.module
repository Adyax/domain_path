<?php

/**
 * @file
 *  Path alias handling for multiple domains.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Component\Utility\Html;

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function domain_path_form_node_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $user = \Drupal::currentUser();
  if (isset($form['domain'])) {
    //$form['domain']['#group'] = 'additional_settings';
  }

  $form['domain_path'] = [
    '#tree' => TRUE,
    '#title' => t('Domain-specific paths'),
    '#type' => 'details',
    '#group' => 'additional_settings',
    '#access' => $user->hasPermission('edit domain path entity'),
  ];

  $domains = \Drupal::service('domain.loader')->loadMultipleSorted();
  $current = t('<none>');

  $nid = FALSE;
  $node = $form_state->getFormObject()->getEntity();
  $langcode = NULL;
  if ($node && $nid = $node->id()) {
    $current = \Drupal::service('path.alias_manager')->getAliasByPath("/node/$nid");
    $langcode = $node->get('langcode')->value;
  }

  $form['domain_path']['current'] = [
    '#type' => 'item',
    '#title' => t('Current alias'),
    '#markup' => Html::escape($current),
    '#weight' => -5,
  ];

  $show_delete = FALSE;
  $domain_path_loader = \Drupal::service('domain_path.loader');

  foreach ($domains as $domain_id => $domain) {
    $path = FALSE;
    $properties = [
      'entity_id' => $nid,
      'language' => $langcode,
      'domain_id' => $domain_id,
      'entity_type' => 'node',
    ];
    if ($nid && $domain_paths = $domain_path_loader->loadByProperties($properties)) {
      foreach ($domain_paths as $domain_path) {
        $path = $domain_path->get('alias')->value;
      }
    }

    $default = '';
    if ($path) {
      $show_delete = TRUE;
    }

    $form['domain_path'][$domain_id] = [
      '#type' => 'textfield',
      '#title' => Html::escape($domain->getPath()),
      '#default_value' => $path ? $path : $default,
      '#access' => $user->hasPermission('edit domain path entity'),
    ];
  }
  $form['domain_path']['domain_path_delete'] = [
    '#type' => 'checkbox',
    '#title' => t('Delete domain-specific aliases'),
    '#default_value' => FALSE,
    '#access' => $show_delete,
    '#weight' => -1,
  ];

  if (!empty($form['actions'])) {
    foreach (array_keys($form['actions']) as $action) {
      if (isset($form['actions'][$action]['#submit'])) {
        $form['actions'][$action]['#submit'][] = '_domain_path_node_form_submit';
      }
    }
  }
}

/**
 * Custom submit for node form.
 *
 * @param $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 */
function _domain_path_node_form_submit($form, FormStateInterface $form_state) {
  $node = $form_state->getFormObject()->getEntity();
  $nid = $node->id();
  $langcode = $node->get('langcode')->value;
  $entity_type = 'node';
  $properties = [
    'entity_id' => $nid,
    'language' => $langcode,
    'entity_type' => $entity_type,
  ];
  $domain_path_values = $form_state->getValue('domain_path');
  $domain_path_loader = \Drupal::service('domain_path.loader');

  // If not set to revert, then save changes.
  if (empty($domain_path_values['domain_path_delete'])) {
    unset($domain_path_values['current']);
    unset($domain_path_values['domain_path_delete']);
    foreach ($domain_path_values as $domain_id => $alias) {
      $properties['domain_id'] = $domain_id;
      $domain_path_entity_data = $domain_path_loader->loadByProperties($properties);

      if (!$alias) {
        if ($domain_path_entity_data) {
          $domain_path_entity_for_delete = reset($domain_path_entity_data);
          $domain_path_entity_for_delete->delete();
        }
        continue;
      }

      $properties_map = [
        'alias' => $alias,
        'domain_id' => $domain_id,
        'source' => "node/$nid",
        'language' => $langcode,
        'entity_type' => $entity_type,
        'entity_id' => $nid,
      ];

      if (!$domain_path_entity_data) {
        $domain_path_storage = $domain_path_loader->getStorage();
        $domain_path_entity = $domain_path_storage->create(['type' => 'domain_path']);
        foreach ($properties_map as $field => $value) {
          $domain_path_entity->set($field, $value);
        }
        $domain_path_entity->save();
        \Drupal::service('path.alias_storage')->save('/domain_path/' . $properties_map['domain_id'] . '/node/' . $nid , $properties_map['alias'], $properties_map['language']);
      }
      else {
        $domain_path_entity = reset($domain_path_entity_data);
        if ($domain_path_entity->get('alias')->value != $alias) {
          $domain_path_entity->set('alias', $alias);
          $domain_path_entity->save();
        }
      }
    }
  }
  else {
    // Delete all domain path aliases.
    $domain_path_entities = $domain_path_loader->loadByProperties($properties);
    foreach ($domain_path_entities as $domain_path_entity) {
      $domain_path_entity->delete();
    }
  }
}
